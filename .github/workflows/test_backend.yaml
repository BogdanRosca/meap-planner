name: Test BE service

on:
  pull_request:
    branches: [ main ]

jobs:
  unit_tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.13.7
      uses: actions/setup-python@v4
      with:
        python-version: '3.13.7'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        pytest tests/unit  -v

  integration_tests:
    name: Run integration tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13.7'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        sudo apt-get update
        sudo apt-get install -y postgresql-client

    - name: Set up database
      run: |
        # Copy test environment file
        cp .env.test .env
        
        # Wait for PostgreSQL to be ready
        until pg_isready -h localhost -p 5432 -U postgres; do
          echo "Waiting for PostgreSQL..."
          sleep 2
        done
        
        # Create user and database
        PGPASSWORD=postgres psql -h localhost -U postgres -c "CREATE USER \"chubby.user\";"
        PGPASSWORD=postgres psql -h localhost -U postgres -c "CREATE DATABASE supermarket OWNER \"chubby.user\";"
        
        # Create recipes table
        PGPASSWORD=postgres psql -h localhost -U "chubby.user" -d supermarket -c "
        CREATE TABLE IF NOT EXISTS recipes (
          id SERIAL PRIMARY KEY,
          name VARCHAR(255) NOT NULL,
          description TEXT,
          ingredients TEXT,
          instructions TEXT,
          created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        );"

    - name: Test server startup
      uses: ./.github/actions/test-server-start
      with:
        app-module: 'app.main:app'
        health-endpoint: '/health'
        host: '127.0.0.1'
        port: '8000'
        startup-timeout: '5'
        working-directory: './backend'
    
    - name: Run tests
      run: |
        pytest tests/integration -v