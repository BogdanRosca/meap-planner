name: Test BE service

on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: 🔍 Code Quality Check (Flake8)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - name: 📁 Checkout code
      uses: actions/checkout@v4
    
    - name: 🐍 Set up Python 3.13.7
      uses: actions/setup-python@v4
      with:
        python-version: '3.13.7'
    
    - name: 🏗️ Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
    
    - name: 🔍 Run Flake8 linting
      run: |
        flake8

  unit_tests:
    name: 🧪 Run unit tests
    runs-on: ubuntu-latest
    needs: lint
    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - name: 📁 Checkout code
      uses: actions/checkout@v4
    
    - name: 🐍 Set up Python 3.13.7
      uses: actions/setup-python@v4
      with:
        python-version: '3.13.7'
    
    - name: 🏗️ Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 🧪 Run tests
      run: |
        pytest tests/unit  -v

  integration_tests:
    name: ⚙️ Run integration tests
    runs-on: ubuntu-latest
    needs: lint
    env:
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
    defaults:
      run:
        working-directory: ./backend
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: supermarket
          POSTGRES_USER: chubby.user
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - name: 📁 Checkout code
      uses: actions/checkout@v4
    
    - name: 🐍 Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13.7'
    
    - name: 🏗️ Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 💿 Setup database
      uses: ./.github/actions/setup-database
      with:
        working-directory: './backend'

    - name: ▶️ Test server startup
      uses: ./.github/actions/test-server-start
      with:
        app-module: 'app.main:app'
        health-endpoint: '/health'
        host: '127.0.0.1'
        port: '8000'
        startup-timeout: '5'
        working-directory: './backend'
    
    - name: 🧪 Run tests
      run: |
        pytest tests/integration -v